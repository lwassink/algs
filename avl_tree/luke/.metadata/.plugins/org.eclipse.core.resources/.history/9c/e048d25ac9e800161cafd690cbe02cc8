
public class Queue<Item> implements Iterable<Item> {
	private Node first;
	private Node last;
	private int size;
	
	private class Node {
		private Item value;
		private Node next;
		
		public Node(Item value) {
			this.value = value;
			this.next = null;
		}
	}
	
	public Queue() {
		this.first = null;
		this.last = null;
	}
	
	public void enqueue(Item x) {
		Node newNode = new Node(x);
		if (last == null) {
			first = newNode;
			last = newNode;
		} else {
			last.next = newNode;
			last = last.next;
		}
		size++;
	}
	
	public Item dequeue() {
		Item output = first.value;
		first = first.next;
		return output;
	}
	
	public int size() {
		return size;
	}
	
	private class QI<Item> implements Iterator<Item> {
		
	}
}
